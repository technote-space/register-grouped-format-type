// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ToolbarDropdown should render ToolbarDropdown 0: opened-dropdown--0 1`] = `
Array [
  <div />,
  <div
    className="editor-format-toolbar block-editor-format-toolbar"
    key="3---0/.$0"
  >
    <div
      className="components-toolbar"
    >
      <div
        className="components-dropdown-button"
      >
        <ForwardRef(IconButton)
          aria-expanded={true}
          aria-haspopup="true"
          aria-pressed={true}
          className="components-dropdown-button__toggle is-active"
          disabled={false}
          icon="admin-customizer"
          label="test label 0"
          onClick={[Function]}
          tooltip="test label 0"
        >
          <ForwardRef(Button)
            aria-expanded={true}
            aria-haspopup="true"
            aria-label="test label 0"
            aria-pressed={true}
            className="components-icon-button components-dropdown-button__toggle is-active has-text"
            disabled={false}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
          >
            <button
              aria-expanded={true}
              aria-haspopup="true"
              aria-label="test label 0"
              aria-pressed={true}
              className="components-button components-icon-button components-dropdown-button__toggle is-active has-text"
              disabled={false}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              type="button"
            >
              <svg
                aria-hidden="true"
                className="dashicon dashicons-admin-customizer"
                focusable="false"
                height={20}
                role="img"
                viewBox="0 0 20 20"
                width={20}
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M18.33 3.57s.27-.8-.31-1.36c-.53-.52-1.22-.24-1.22-.24-.61.3-5.76 3.47-7.67 5.57-.86.96-2.06 3.79-1.09 4.82.92.98 3.96-.17 4.79-1 2.06-2.06 5.21-7.17 5.5-7.79zM1.4 17.65c2.37-1.56 1.46-3.41 3.23-4.64.93-.65 2.22-.62 3.08.29.63.67.8 2.57-.16 3.46-1.57 1.45-4 1.55-6.15.89z"
                />
              </svg>
              <span
                className="components-dropdown-button__indicator"
                key="0,1"
              />
            </button>
          </ForwardRef(Button)>
        </ForwardRef(IconButton)>
        <span>
          <Portal
            containerInfo={
              <div>
                <div
                  tabindex="-1"
                >
                  <div>
                    <div
                      class="components-popover components-dropdown-button__popover is-bottom is-right components-animate__appear is-from-left is-from-top"
                      style="top: -3px;"
                    >
                      <div
                        class="components-popover__content"
                        tabindex="-1"
                      >
                        <div
                          aria-label="test label 0"
                          aria-orientation="vertical"
                          class="components-dropdown-menu__menu test-menu-class"
                          role="menu"
                        >
                          <button
                            class="components-button components-icon-button components-dropdown-menu__menu-item is-active has-text"
                            role="menuitem"
                            type="button"
                          >
                            ToolbarButton1
                          </button>
                          <button
                            class="components-button components-icon-button components-dropdown-menu__menu-item has-text"
                            role="menuitem"
                            type="button"
                          >
                            ToolbarButton2
                          </button>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            }
          >
            <div
              onKeyDown={[Function]}
              tabIndex="-1"
            >
              <div
                onBlur={[Function]}
                onFocus={[Function]}
              >
                <div
                  className="components-popover components-dropdown-button__popover is-bottom is-right components-animate__appear is-from-left is-from-top"
                  onKeyDown={[Function]}
                  onMouseDown={[Function]}
                  style={
                    Object {
                      "left": undefined,
                      "top": "-3px",
                      "visibility": undefined,
                    }
                  }
                >
                  <div
                    className="components-popover__content"
                    style={
                      Object {
                        "maxHeight": undefined,
                        "maxWidth": undefined,
                      }
                    }
                    tabIndex="-1"
                  >
                    <ForwardRef(NavigableMenu)
                      aria-label="test label 0"
                      className="components-dropdown-menu__menu test-menu-class"
                      role="menu"
                    >
                      <ForwardRef(NavigableContainer)
                        aria-label="test label 0"
                        aria-orientation="vertical"
                        className="components-dropdown-menu__menu test-menu-class"
                        eventToOffset={[Function]}
                        onlyBrowserTabstops={false}
                        role="menu"
                        stopNavigationEvents={true}
                      >
                        <div
                          aria-label="test label 0"
                          aria-orientation="vertical"
                          className="components-dropdown-menu__menu test-menu-class"
                          role="menu"
                        >
                          <ForwardRef(IconButton)
                            className="components-dropdown-menu__menu-item is-active"
                            key="0"
                            onClick={[Function]}
                            role="menuitem"
                          >
                            <ForwardRef(Button)
                              className="components-icon-button components-dropdown-menu__menu-item is-active has-text"
                              onClick={[Function]}
                              role="menuitem"
                            >
                              <button
                                className="components-button components-icon-button components-dropdown-menu__menu-item is-active has-text"
                                onClick={[Function]}
                                role="menuitem"
                                type="button"
                              >
                                ToolbarButton1
                              </button>
                            </ForwardRef(Button)>
                          </ForwardRef(IconButton)>
                          <ForwardRef(IconButton)
                            className="components-dropdown-menu__menu-item"
                            key="1"
                            onClick={[Function]}
                            role="menuitem"
                          >
                            <ForwardRef(Button)
                              className="components-icon-button components-dropdown-menu__menu-item has-text"
                              onClick={[Function]}
                              role="menuitem"
                            >
                              <button
                                className="components-button components-icon-button components-dropdown-menu__menu-item has-text"
                                onClick={[Function]}
                                role="menuitem"
                                type="button"
                              >
                                ToolbarButton2
                              </button>
                            </ForwardRef(Button)>
                          </ForwardRef(IconButton)>
                        </div>
                      </ForwardRef(NavigableContainer)>
                    </ForwardRef(NavigableMenu)>
                  </div>
                </div>
              </div>
            </div>
          </Portal>
        </span>
      </div>
    </div>
  </div>,
  Array [
    <div>
       
      Array [
        "",
        "",
        <div
          className="editor-rich-text block-editor-rich-text"
        >
          <div
            onFocus={[Function]}
          >
            <div
              onBlur={[Function]}
              onFocus={[Function]}
              onMouseDown={[Function]}
              onMouseUp={[Function]}
              onTouchEnd={[Function]}
              onTouchStart={[Function]}
            >
              <div
                className="components-autocomplete"
                onClick={[Function]}
              >
                <p
                  aria-activedescendant={null}
                  aria-label="Paragraph block"
                  aria-multiline={true}
                  aria-owns={null}
                  className="rich-text editor-rich-text__editable block-editor-rich-text__editable wp-block-paragraph test-block-edit"
                  contentEditable={true}
                  dangerouslySetInnerHTML={
                    Object {
                      "__html": "ï»¿<span data-rich-text-placeholder=\\"Start writing or type / to choose a block\\"></span>",
                    }
                  }
                  onBlur={[Function]}
                  onCompositionEnd={[Function]}
                  onFocus={[Function]}
                  onInput={[Function]}
                  onKeyDown={[Function]}
                  onMouseDown={[Function]}
                  onPaste={[Function]}
                  onTouchStart={[Function]}
                  role="textbox"
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": undefined,
                      "direction": undefined,
                      "fontSize": undefined,
                      "textAlign": undefined,
                      "whiteSpace": "pre-wrap",
                    }
                  }
                  suppressContentEditableWarning={true}
                />
              </div>
            </div>
          </div>
        </div>,
      ]
       
    </div>,
    "",
    "",
    "",
  ],
]
`;

exports[`ToolbarDropdown should render ToolbarDropdown 0: test--0 1`] = `
Array [
  <div />,
  <div
    className="editor-format-toolbar block-editor-format-toolbar"
    key="3---0/.$0"
  >
    <div
      className="components-toolbar"
    >
      <div
        className="components-dropdown-button"
      >
        <ForwardRef(IconButton)
          aria-expanded={false}
          aria-haspopup="true"
          aria-pressed={true}
          className="components-dropdown-button__toggle is-active"
          disabled={false}
          icon="admin-customizer"
          label="test label 0"
          onClick={[Function]}
          tooltip="test label 0"
        >
          <ForwardRef(Button)
            aria-expanded={false}
            aria-haspopup="true"
            aria-label="test label 0"
            aria-pressed={true}
            className="components-icon-button components-dropdown-button__toggle is-active has-text"
            disabled={false}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
          >
            <button
              aria-expanded={false}
              aria-haspopup="true"
              aria-label="test label 0"
              aria-pressed={true}
              className="components-button components-icon-button components-dropdown-button__toggle is-active has-text"
              disabled={false}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              type="button"
            >
              <svg
                aria-hidden="true"
                className="dashicon dashicons-admin-customizer"
                focusable="false"
                height={20}
                role="img"
                viewBox="0 0 20 20"
                width={20}
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M18.33 3.57s.27-.8-.31-1.36c-.53-.52-1.22-.24-1.22-.24-.61.3-5.76 3.47-7.67 5.57-.86.96-2.06 3.79-1.09 4.82.92.98 3.96-.17 4.79-1 2.06-2.06 5.21-7.17 5.5-7.79zM1.4 17.65c2.37-1.56 1.46-3.41 3.23-4.64.93-.65 2.22-.62 3.08.29.63.67.8 2.57-.16 3.46-1.57 1.45-4 1.55-6.15.89z"
                />
              </svg>
              <span
                className="components-dropdown-button__indicator"
                key="0,1"
              />
            </button>
          </ForwardRef(Button)>
        </ForwardRef(IconButton)>
      </div>
    </div>
  </div>,
  Array [
    <div>
       
      Array [
        "",
        "",
        <div
          className="editor-rich-text block-editor-rich-text"
        >
          <div
            onFocus={[Function]}
          >
            <div
              onBlur={[Function]}
              onFocus={[Function]}
              onMouseDown={[Function]}
              onMouseUp={[Function]}
              onTouchEnd={[Function]}
              onTouchStart={[Function]}
            >
              <div
                className="components-autocomplete"
                onClick={[Function]}
              >
                <p
                  aria-activedescendant={null}
                  aria-label="Paragraph block"
                  aria-multiline={true}
                  aria-owns={null}
                  className="rich-text editor-rich-text__editable block-editor-rich-text__editable wp-block-paragraph test-block-edit"
                  contentEditable={true}
                  dangerouslySetInnerHTML={
                    Object {
                      "__html": "ï»¿<span data-rich-text-placeholder=\\"Start writing or type / to choose a block\\"></span>",
                    }
                  }
                  onBlur={[Function]}
                  onCompositionEnd={[Function]}
                  onFocus={[Function]}
                  onInput={[Function]}
                  onKeyDown={[Function]}
                  onMouseDown={[Function]}
                  onPaste={[Function]}
                  onTouchStart={[Function]}
                  role="textbox"
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": undefined,
                      "direction": undefined,
                      "fontSize": undefined,
                      "textAlign": undefined,
                      "whiteSpace": "pre-wrap",
                    }
                  }
                  suppressContentEditableWarning={true}
                />
              </div>
            </div>
          </div>
        </div>,
      ]
       
    </div>,
    "",
    "",
    "",
  ],
]
`;

exports[`ToolbarDropdown should render ToolbarDropdown 1: opened-dropdown--1 1`] = `
Array [
  <div />,
  <div
    className="editor-format-toolbar block-editor-format-toolbar"
    key="9---0/.$0"
  >
    <div
      className="components-toolbar"
    >
      <div
        className="components-dropdown-button test-class"
      >
        <ForwardRef(IconButton)
          aria-expanded={true}
          aria-haspopup="true"
          aria-pressed={true}
          className="components-dropdown-button__toggle is-active"
          disabled={false}
          icon="admin-customizer"
          label="test label 1"
          onClick={[Function]}
          tooltip="test label 1"
        >
          <ForwardRef(Button)
            aria-expanded={true}
            aria-haspopup="true"
            aria-label="test label 1"
            aria-pressed={true}
            className="components-icon-button components-dropdown-button__toggle is-active has-text"
            disabled={false}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
          >
            <button
              aria-expanded={true}
              aria-haspopup="true"
              aria-label="test label 1"
              aria-pressed={true}
              className="components-button components-icon-button components-dropdown-button__toggle is-active has-text"
              disabled={false}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              type="button"
            >
              <svg
                aria-hidden="true"
                className="dashicon dashicons-admin-customizer"
                focusable="false"
                height={20}
                role="img"
                viewBox="0 0 20 20"
                width={20}
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M18.33 3.57s.27-.8-.31-1.36c-.53-.52-1.22-.24-1.22-.24-.61.3-5.76 3.47-7.67 5.57-.86.96-2.06 3.79-1.09 4.82.92.98 3.96-.17 4.79-1 2.06-2.06 5.21-7.17 5.5-7.79zM1.4 17.65c2.37-1.56 1.46-3.41 3.23-4.64.93-.65 2.22-.62 3.08.29.63.67.8 2.57-.16 3.46-1.57 1.45-4 1.55-6.15.89z"
                />
              </svg>
              <span
                className="components-dropdown-button__indicator"
                key="0,1"
              />
            </button>
          </ForwardRef(Button)>
        </ForwardRef(IconButton)>
        <span>
          <Portal
            containerInfo={
              <div>
                <div
                  tabindex="-1"
                >
                  <div>
                    <div
                      class="components-popover components-dropdown-button__popover is-bottom is-right components-animate__appear is-from-left is-from-top"
                      style="top: -3px;"
                    >
                      <div
                        class="components-popover__content"
                        tabindex="-1"
                      >
                        <div
                          aria-label="test label 1"
                          aria-orientation="vertical"
                          class="components-dropdown-menu__menu"
                          role="menu"
                        >
                          <button
                            class="components-button components-icon-button components-dropdown-menu__menu-item is-active has-text"
                            role="menuitem"
                            type="button"
                          >
                            ToolbarButton3
                          </button>
                          <button
                            class="components-button components-icon-button components-dropdown-menu__menu-item has-text"
                            disabled=""
                            role="menuitem"
                            type="button"
                          >
                            ToolbarButton4
                          </button>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            }
          >
            <div
              onKeyDown={[Function]}
              tabIndex="-1"
            >
              <div
                onBlur={[Function]}
                onFocus={[Function]}
              >
                <div
                  className="components-popover components-dropdown-button__popover is-bottom is-right components-animate__appear is-from-left is-from-top"
                  onKeyDown={[Function]}
                  onMouseDown={[Function]}
                  style={
                    Object {
                      "left": undefined,
                      "top": "-3px",
                      "visibility": undefined,
                    }
                  }
                >
                  <div
                    className="components-popover__content"
                    style={
                      Object {
                        "maxHeight": undefined,
                        "maxWidth": undefined,
                      }
                    }
                    tabIndex="-1"
                  >
                    <ForwardRef(NavigableMenu)
                      aria-label="test label 1"
                      className="components-dropdown-menu__menu"
                      role="menu"
                    >
                      <ForwardRef(NavigableContainer)
                        aria-label="test label 1"
                        aria-orientation="vertical"
                        className="components-dropdown-menu__menu"
                        eventToOffset={[Function]}
                        onlyBrowserTabstops={false}
                        role="menu"
                        stopNavigationEvents={true}
                      >
                        <div
                          aria-label="test label 1"
                          aria-orientation="vertical"
                          className="components-dropdown-menu__menu"
                          role="menu"
                        >
                          <ForwardRef(IconButton)
                            className="components-dropdown-menu__menu-item is-active"
                            key="0"
                            onClick={[Function]}
                            role="menuitem"
                          >
                            <ForwardRef(Button)
                              className="components-icon-button components-dropdown-menu__menu-item is-active has-text"
                              onClick={[Function]}
                              role="menuitem"
                            >
                              <button
                                className="components-button components-icon-button components-dropdown-menu__menu-item is-active has-text"
                                onClick={[Function]}
                                role="menuitem"
                                type="button"
                              >
                                ToolbarButton3
                              </button>
                            </ForwardRef(Button)>
                          </ForwardRef(IconButton)>
                          <ForwardRef(IconButton)
                            className="components-dropdown-menu__menu-item"
                            disabled={true}
                            key="1"
                            onClick={[Function]}
                            role="menuitem"
                          >
                            <ForwardRef(Button)
                              className="components-icon-button components-dropdown-menu__menu-item has-text"
                              disabled={true}
                              onClick={[Function]}
                              role="menuitem"
                            >
                              <button
                                className="components-button components-icon-button components-dropdown-menu__menu-item has-text"
                                disabled={true}
                                onClick={[Function]}
                                role="menuitem"
                                type="button"
                              >
                                ToolbarButton4
                              </button>
                            </ForwardRef(Button)>
                          </ForwardRef(IconButton)>
                        </div>
                      </ForwardRef(NavigableContainer)>
                    </ForwardRef(NavigableMenu)>
                  </div>
                </div>
              </div>
            </div>
          </Portal>
        </span>
      </div>
    </div>
  </div>,
  Array [
    <div>
       
      Array [
        "",
        "",
        <div
          className="editor-rich-text block-editor-rich-text"
        >
          <div
            onFocus={[Function]}
          >
            <div
              onBlur={[Function]}
              onFocus={[Function]}
              onMouseDown={[Function]}
              onMouseUp={[Function]}
              onTouchEnd={[Function]}
              onTouchStart={[Function]}
            >
              <div
                className="components-autocomplete"
                onClick={[Function]}
              >
                <p
                  aria-activedescendant={null}
                  aria-label="Paragraph block"
                  aria-multiline={true}
                  aria-owns={null}
                  className="rich-text editor-rich-text__editable block-editor-rich-text__editable wp-block-paragraph test-block-edit"
                  contentEditable={true}
                  dangerouslySetInnerHTML={
                    Object {
                      "__html": "ï»¿<span data-rich-text-placeholder=\\"Start writing or type / to choose a block\\"></span>",
                    }
                  }
                  onBlur={[Function]}
                  onCompositionEnd={[Function]}
                  onFocus={[Function]}
                  onInput={[Function]}
                  onKeyDown={[Function]}
                  onMouseDown={[Function]}
                  onPaste={[Function]}
                  onTouchStart={[Function]}
                  role="textbox"
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": undefined,
                      "direction": undefined,
                      "fontSize": undefined,
                      "textAlign": undefined,
                      "whiteSpace": "pre-wrap",
                    }
                  }
                  suppressContentEditableWarning={true}
                />
              </div>
            </div>
          </div>
        </div>,
      ]
       
    </div>,
    "",
    "",
    "",
  ],
]
`;

exports[`ToolbarDropdown should render ToolbarDropdown 1: test--1 1`] = `
Array [
  <div />,
  <div
    className="editor-format-toolbar block-editor-format-toolbar"
    key="9---0/.$0"
  >
    <div
      className="components-toolbar"
    >
      <div
        className="components-dropdown-button test-class"
      >
        <ForwardRef(IconButton)
          aria-expanded={false}
          aria-haspopup="true"
          aria-pressed={true}
          className="components-dropdown-button__toggle is-active"
          disabled={false}
          icon="admin-customizer"
          label="test label 1"
          onClick={[Function]}
          tooltip="test label 1"
        >
          <ForwardRef(Button)
            aria-expanded={false}
            aria-haspopup="true"
            aria-label="test label 1"
            aria-pressed={true}
            className="components-icon-button components-dropdown-button__toggle is-active has-text"
            disabled={false}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
          >
            <button
              aria-expanded={false}
              aria-haspopup="true"
              aria-label="test label 1"
              aria-pressed={true}
              className="components-button components-icon-button components-dropdown-button__toggle is-active has-text"
              disabled={false}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              type="button"
            >
              <svg
                aria-hidden="true"
                className="dashicon dashicons-admin-customizer"
                focusable="false"
                height={20}
                role="img"
                viewBox="0 0 20 20"
                width={20}
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M18.33 3.57s.27-.8-.31-1.36c-.53-.52-1.22-.24-1.22-.24-.61.3-5.76 3.47-7.67 5.57-.86.96-2.06 3.79-1.09 4.82.92.98 3.96-.17 4.79-1 2.06-2.06 5.21-7.17 5.5-7.79zM1.4 17.65c2.37-1.56 1.46-3.41 3.23-4.64.93-.65 2.22-.62 3.08.29.63.67.8 2.57-.16 3.46-1.57 1.45-4 1.55-6.15.89z"
                />
              </svg>
              <span
                className="components-dropdown-button__indicator"
                key="0,1"
              />
            </button>
          </ForwardRef(Button)>
        </ForwardRef(IconButton)>
      </div>
    </div>
  </div>,
  Array [
    <div>
       
      Array [
        "",
        "",
        <div
          className="editor-rich-text block-editor-rich-text"
        >
          <div
            onFocus={[Function]}
          >
            <div
              onBlur={[Function]}
              onFocus={[Function]}
              onMouseDown={[Function]}
              onMouseUp={[Function]}
              onTouchEnd={[Function]}
              onTouchStart={[Function]}
            >
              <div
                className="components-autocomplete"
                onClick={[Function]}
              >
                <p
                  aria-activedescendant={null}
                  aria-label="Paragraph block"
                  aria-multiline={true}
                  aria-owns={null}
                  className="rich-text editor-rich-text__editable block-editor-rich-text__editable wp-block-paragraph test-block-edit"
                  contentEditable={true}
                  dangerouslySetInnerHTML={
                    Object {
                      "__html": "ï»¿<span data-rich-text-placeholder=\\"Start writing or type / to choose a block\\"></span>",
                    }
                  }
                  onBlur={[Function]}
                  onCompositionEnd={[Function]}
                  onFocus={[Function]}
                  onInput={[Function]}
                  onKeyDown={[Function]}
                  onMouseDown={[Function]}
                  onPaste={[Function]}
                  onTouchStart={[Function]}
                  role="textbox"
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": undefined,
                      "direction": undefined,
                      "fontSize": undefined,
                      "textAlign": undefined,
                      "whiteSpace": "pre-wrap",
                    }
                  }
                  suppressContentEditableWarning={true}
                />
              </div>
            </div>
          </div>
        </div>,
      ]
       
    </div>,
    "",
    "",
    "",
  ],
]
`;

exports[`ToolbarDropdown should render ToolbarDropdown 2: test--2 1`] = `
Array [
  <div />,
  <div
    className="editor-format-toolbar block-editor-format-toolbar"
    key="15---0/.$0"
  >
    <div
      className="components-toolbar"
    >
      <div
        className="components-dropdown-button"
      >
        <ForwardRef(IconButton)
          aria-expanded={false}
          aria-haspopup="true"
          aria-pressed={false}
          className="components-dropdown-button__toggle"
          disabled={true}
          icon="admin-customizer"
          label="test label 2"
          onClick={[Function]}
          tooltip="test label 2"
        >
          <ForwardRef(Button)
            aria-expanded={false}
            aria-haspopup="true"
            aria-label="test label 2"
            aria-pressed={false}
            className="components-icon-button components-dropdown-button__toggle has-text"
            disabled={true}
            onClick={[Function]}
          >
            <button
              aria-expanded={false}
              aria-haspopup="true"
              aria-label="test label 2"
              aria-pressed={false}
              className="components-button components-icon-button components-dropdown-button__toggle has-text"
              disabled={true}
              onClick={[Function]}
              type="button"
            >
              <svg
                aria-hidden="true"
                className="dashicon dashicons-admin-customizer"
                focusable="false"
                height={20}
                role="img"
                viewBox="0 0 20 20"
                width={20}
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M18.33 3.57s.27-.8-.31-1.36c-.53-.52-1.22-.24-1.22-.24-.61.3-5.76 3.47-7.67 5.57-.86.96-2.06 3.79-1.09 4.82.92.98 3.96-.17 4.79-1 2.06-2.06 5.21-7.17 5.5-7.79zM1.4 17.65c2.37-1.56 1.46-3.41 3.23-4.64.93-.65 2.22-.62 3.08.29.63.67.8 2.57-.16 3.46-1.57 1.45-4 1.55-6.15.89z"
                />
              </svg>
              <span
                className="components-dropdown-button__indicator"
              />
            </button>
          </ForwardRef(Button)>
        </ForwardRef(IconButton)>
      </div>
    </div>
  </div>,
  Array [
    <div>
       
      Array [
        "",
        "",
        <div
          className="editor-rich-text block-editor-rich-text"
        >
          <div
            onFocus={[Function]}
          >
            <div
              onBlur={[Function]}
              onFocus={[Function]}
              onMouseDown={[Function]}
              onMouseUp={[Function]}
              onTouchEnd={[Function]}
              onTouchStart={[Function]}
            >
              <div
                className="components-autocomplete"
                onClick={[Function]}
              >
                <p
                  aria-activedescendant={null}
                  aria-label="Paragraph block"
                  aria-multiline={true}
                  aria-owns={null}
                  className="rich-text editor-rich-text__editable block-editor-rich-text__editable wp-block-paragraph test-block-edit"
                  contentEditable={true}
                  dangerouslySetInnerHTML={
                    Object {
                      "__html": "ï»¿<span data-rich-text-placeholder=\\"Start writing or type / to choose a block\\"></span>",
                    }
                  }
                  onBlur={[Function]}
                  onCompositionEnd={[Function]}
                  onFocus={[Function]}
                  onInput={[Function]}
                  onKeyDown={[Function]}
                  onMouseDown={[Function]}
                  onPaste={[Function]}
                  onTouchStart={[Function]}
                  role="textbox"
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": undefined,
                      "direction": undefined,
                      "fontSize": undefined,
                      "textAlign": undefined,
                      "whiteSpace": "pre-wrap",
                    }
                  }
                  suppressContentEditableWarning={true}
                />
              </div>
            </div>
          </div>
        </div>,
      ]
       
    </div>,
    "",
    "",
    "",
  ],
]
`;

exports[`ToolbarDropdown should render ToolbarDropdown 3: test--3 1`] = `
Array [
  <div />,
  <div
    className="editor-format-toolbar block-editor-format-toolbar"
    key="20---0/.$0"
  >
    <div
      className="components-toolbar"
    >
      <div>
        <ForwardRef(IconButton)
          aria-pressed={true}
          className="components-toolbar__control toolbar-button-test7 is-active"
          label="ToolbarButton7"
          onClick={[Function]}
        >
          <ForwardRef(Button)
            aria-label="ToolbarButton7"
            aria-pressed={true}
            className="components-icon-button components-toolbar__control toolbar-button-test7 is-active"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
          >
            <button
              aria-label="ToolbarButton7"
              aria-pressed={true}
              className="components-button components-icon-button components-toolbar__control toolbar-button-test7 is-active"
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              type="button"
            />
          </ForwardRef(Button)>
        </ForwardRef(IconButton)>
      </div>
    </div>
  </div>,
  Array [
    <div>
       
      Array [
        "",
        "",
        <div
          className="editor-rich-text block-editor-rich-text"
        >
          <div
            onFocus={[Function]}
          >
            <div
              onBlur={[Function]}
              onFocus={[Function]}
              onMouseDown={[Function]}
              onMouseUp={[Function]}
              onTouchEnd={[Function]}
              onTouchStart={[Function]}
            >
              <div
                className="components-autocomplete"
                onClick={[Function]}
              >
                <p
                  aria-activedescendant={null}
                  aria-label="Paragraph block"
                  aria-multiline={true}
                  aria-owns={null}
                  className="rich-text editor-rich-text__editable block-editor-rich-text__editable wp-block-paragraph test-block-edit"
                  contentEditable={true}
                  dangerouslySetInnerHTML={
                    Object {
                      "__html": "ï»¿<span data-rich-text-placeholder=\\"Start writing or type / to choose a block\\"></span>",
                    }
                  }
                  onBlur={[Function]}
                  onCompositionEnd={[Function]}
                  onFocus={[Function]}
                  onInput={[Function]}
                  onKeyDown={[Function]}
                  onMouseDown={[Function]}
                  onPaste={[Function]}
                  onTouchStart={[Function]}
                  role="textbox"
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": undefined,
                      "direction": undefined,
                      "fontSize": undefined,
                      "textAlign": undefined,
                      "whiteSpace": "pre-wrap",
                    }
                  }
                  suppressContentEditableWarning={true}
                />
              </div>
            </div>
          </div>
        </div>,
      ]
       
    </div>,
    "",
    "",
  ],
]
`;

exports[`ToolbarDropdown should render ToolbarDropdown 4: test--4 1`] = `
Array [
  <div />,
  <div
    className="editor-format-toolbar block-editor-format-toolbar"
    key="24---0/.$0"
  >
    <div
      className="components-toolbar"
    />
  </div>,
  Array [
    <div>
       
      Array [
        "",
        "",
        <div
          className="editor-rich-text block-editor-rich-text"
        >
          <div
            onFocus={[Function]}
          >
            <div
              onBlur={[Function]}
              onFocus={[Function]}
              onMouseDown={[Function]}
              onMouseUp={[Function]}
              onTouchEnd={[Function]}
              onTouchStart={[Function]}
            >
              <div
                className="components-autocomplete"
                onClick={[Function]}
              >
                <p
                  aria-activedescendant={null}
                  aria-label="Paragraph block"
                  aria-multiline={true}
                  aria-owns={null}
                  className="rich-text editor-rich-text__editable block-editor-rich-text__editable wp-block-paragraph test-block-edit"
                  contentEditable={true}
                  dangerouslySetInnerHTML={
                    Object {
                      "__html": "ï»¿<span data-rich-text-placeholder=\\"Start writing or type / to choose a block\\"></span>",
                    }
                  }
                  onBlur={[Function]}
                  onCompositionEnd={[Function]}
                  onFocus={[Function]}
                  onInput={[Function]}
                  onKeyDown={[Function]}
                  onMouseDown={[Function]}
                  onPaste={[Function]}
                  onTouchStart={[Function]}
                  role="textbox"
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": undefined,
                      "direction": undefined,
                      "fontSize": undefined,
                      "textAlign": undefined,
                      "whiteSpace": "pre-wrap",
                    }
                  }
                  suppressContentEditableWarning={true}
                />
              </div>
            </div>
          </div>
        </div>,
      ]
       
    </div>,
    "",
    "",
  ],
]
`;
